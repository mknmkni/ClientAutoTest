/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.0'

    testImplementation 'com.codeborne:selenide:6.0.3'

    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	testImplementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.1.1'
	testImplementation group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.4'
	testImplementation 'com.github.romankh3:image-comparison:4.4.0'


}

application {
    // Define the main class for the application.
    mainClass = 'ClientAutoTest.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(Test) {
systemProperty "DISPLAY", ":98"
}